{
  "files": {
    "test_hiker.rb": {
      "content": [
        "require_relative 'coverage'\n",
        "require_relative 'hiker'\n",
        "require 'minitest/autorun'\n",
        "\n",
        "class TestHiker < MiniTest::Test\n",
        "\n",
        "  def test_life_the_universe_and_everything\n",
        "    assert_equal 42, answer\n",
        "  end\n",
        "\n",
        "end\n"
      ]
    },
    "hiker.rb": {
      "content": [
        "\n",
        "def answer\n",
        "  6 * 999\n",
        "end\n"
      ]
    },
    "cyber-dojo.sh": {
      "content": [
        "for test_file in *test*.rb\n",
        "do\n",
        "  ruby $test_file\n",
        "done\n"
      ]
    },
    "coverage.rb": {
      "content": [
        "require 'simplecov'\n",
        "require 'simplecov-console'\n",
        "SimpleCov.formatter = SimpleCov::Formatter::Console\n",
        "SimpleCov.start\n"
      ]
    },
    "readme.txt": {
      "content": [
        "There are four types of common coins in US currency:\n",
        "  quarters (25 cents)\n",
        "  dimes (10 cents)\n",
        "  nickels (5 cents) \n",
        "  pennies (1 cent)\n",
        "  \n",
        "There are 6 ways to make change for 15 cents:\n",
        "  A dime and a nickel;\n",
        "  A dime and 5 pennies;\n",
        "  3 nickels;\n",
        "  2 nickels and 5 pennies;\n",
        "  A nickel and 10 pennies;\n",
        "  15 pennies.\n",
        "  \n",
        "How many ways are there to make change for a dollar\n",
        "using these common coins? (1 dollar = 100 cents).\n",
        "\n",
        "[Source http://rosettacode.org]"
      ]
    }
  },
  "stdout": {
    "content": [
      "Run options: --seed 39835\n",
      "\n",
      "# Running:\n",
      "\n",
      "F\n",
      "\n",
      "Finished in 0.001589s, 629.3678 runs/s, 629.3678 assertions/s.\n",
      "\n",
      "  1) Failure:\n",
      "TestHiker#test_life_the_universe_and_everything [test_hiker.rb:8]:\n",
      "Expected: 42\n",
      "  Actual: 5994\n",
      "\n",
      "1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\n",
      "\n",
      "COVERAGE: 100.00% -- 2/2 lines in 1 files\n"
    ],
    "truncated": false
  },
  "stderr": {
    "content": [
      ""
    ],
    "truncated": false
  },
  "status": 1
}