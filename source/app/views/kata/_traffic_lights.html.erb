<div id="traffic-lights"></div>

<script>
'use strict';
$(() => {

  const kata = cd.kata;

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // There are two sequences of traffic-lights:
  // o) kata-page traffic-lights live under #traffic-lights.
  //    Click any of these to open the diff-review
  // o) review-page traffic-lights live under #review-traffic-lights.
  //    Click any of these to move to it in the diff-review.
  // The first of these are controlled here.
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const $lights = $('#kata-page #traffic-lights');

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // cd.kata.appendTrafficLight() sets up the tip/click handlers
  // for the kata-page (but not review-page) traffic-lights.
  // It is called in these places:
  //   1) From views/kata/edit.html.erb
  //      - When the page loads.
  //   2) From views/kata/run_tests.js.erb
  //      - When you run the [test]s (and when there is a revert)
  //   3) From views/review/_checkout_button.html.erb
  //      - When you click [checkout].
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  kata.appendTrafficLight = (light, option={scrollIntoView:false}) => {
    if (cd.lib.isVisible(light)) {
      const $light = cd.lib.appendTrafficLight($lights, light);
      if (option.scrollIntoView) {
        $light.scrollIntoView({
          direction: 'horizontal',
           duration: 'slow'
        });
      }
      kata.trafficLightsCounts.update(light);
      kata.predictCounts.update(light);
      $light.click(() => cd.review.fromTestPage(kata.id, light.index));
      const delta = light.index === 0 ? 0 : 1;
      cd.setupTrafficLightTip($light, light, kata.id, light.index-delta, light.index);
    }
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Don't use show() or hide() here as the animation is far
  // too slow (even on 'fast') when you have a reasonably
  // large number of traffic-lights.

  const $predictImages = () => $('img.tick, img.cross', $lights);

  kata.predictImages = {
    hide: () => {
      $predictImages().addClass('hide');
      cd.kata.scrollLastTrafficLightIntoView();
    },
    show: () => {
      $predictImages().removeClass('hide');
      cd.kata.scrollLastTrafficLightIntoView();
    }
  };

});
</script>
