<button id="checkout-button" type="button" style="display:none;">checkout</button>

<script>
'use strict';
$(() => {

  const kata = cd.kata;
  const review = cd.review;

  const $button = $('#checkout-button');
  cd.createTip($button, () => {
    if (kata.id === review.id) {
      return `revert back to this<br/>traffic-light's files`;
    } else {
      return `make this traffic-light's<br/>files your current files`;
    }
  });
  $button.click(() => review.fadeOut(checkout));

  review.checkoutButton = {
    show: () => $button.show(),
    enable: () => $button.prop('disabled', false),
    disable: () => $button.prop('disabled', true),
    refresh: () => {
      const title = (kata.id === review.id) ? 'revert' : 'checkout!';
      $button.html(title);
    }
  };

  const checkout = () => {
    const args = {       // where we are writing to
      id: kata.id,       // eg 'Xd4f2P'
      index: kata.index, // eg 17
      src_id: review.id, // where we are reading from
      src_index: review.index,
      src_avatar_index: review.avatarIndex
    };
    cd.settings.showButton();
    $.post('/kata/checkout', args, (data) => {
      kata.incrementIndex();
      kata.editor.deleteFiles();
      for (const filename in data.files) {
        kata.editor.createFile(filename, { content:data.files[filename] });
        kata.editor.showFile(filename);
      }
      kata.editor.output(data.stdout.content, data.stderr.content, data.status);
      kata.tabs.output().click();
      kata.filenames.refresh();
      kata.appendTrafficLight(data.light, {scrollIntoView:true});
    }, 'json');
  };

});
</script>
