<span id="avatar-navigator" style="display:none;">
  <button id="prev-avatar" class="triangle button">
    <img src="/images/triangle_prev.gif"
         alt="move to previous avatar"/>
  </button>
  <div id="review-avatar-image-box"></div>
  <button id="next-avatar" class="triangle button">
    <img src="/images/triangle_next.gif"
         alt="move to next avatar"/>
  </button>
</span>

<script>
'use strict';
$(() => {

  const review = cd.review;

  const $avatarNavigator = $('#avatar-navigator');

  review.avatarNavigator = {
       hide: () => $avatarNavigator.hide(),
    refresh: () => {
      review.getJSON('model', 'group_joined', {id:review.id}, (joined) => {
        avatarNavigatorRefresher(joined);
      });
    }
  };

  const avatarNavigatorRefresher = (joined) => {
    const [prevIndex,avatarIndex,nextIndex] = review.avatarsNeighbours(review.id, joined);
    review.avatarIndex = avatarIndex; // eg 23/''  for [checkout] button
    if (avatarIndex != '') {
      const $avatar = $('#review-avatar-image-box');
      refreshAvatar($('#prev-avatar'), joined, prevIndex);
      refreshAvatar($('#next-avatar'), joined, nextIndex);
      const $img = cd.lib.$makeAvatarImage(avatarIndex);
      cd.createTip($img, "review any avatar's files");
      $avatar.html($img)
             .off('click')
             .on('click', () => cd.lib.openAvatarSelectorDialog($avatar, review.id, setupActiveAvatar));
      $avatarNavigator.show();
    }
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const refreshAvatar = (button, joined, index) => {
    button
      .attr('disabled', index === '')
      .off('click')
      .on('click', () => moveToAvatar(joined[index]));
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -

  const setupActiveAvatar = ($img, index, avatar, $selector) => {
    cd.createTip($img, cd.lib.avatarName(index));
    $img.click(() => {
      cd.removeTip();
      $selector.dialog('close');
      moveToAvatar(avatar);
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const moveToAvatar = (avatar) => {
    const index = review.diffCheckBox.isChecked() ? 1 : avatar.events.length - 1;
    review.refresh(avatar.id, index);
  };

});
</script>
