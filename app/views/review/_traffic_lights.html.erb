<div id="review-traffic-lights"></div>

<script>
'use strict';
$(() => {

  const review = cd.review;

  const $trafficLights = $('#review-traffic-lights');

  review.refreshTrafficLights = (kataId, index) => {
    review.getJSON('model', 'kata_events', {id:kataId}, (events) => {
      if (index === -1) {
        index = events.length - 1;
      }
      trafficLightsRefresher(kataId, index, events);
      review.refreshTrafficLightsNavigator(kataId, index, events);
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const trafficLightsRefresher = (kataId, index, events) => {
    $trafficLights.empty();
    appendTrafficLights(kataId, index, events);
    scrollCurrentTrafficLightIntoView();
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  review.moveToTrafficLight = (kataId, nowIndex) => {
    if (nowIndex === -1 && review.inDiffMode()) {
      review.refresh(kataId, 0, 1);
    } else {
      const delta = review.inDiffMode() ? 1 : 0;
      const wasIndex = nowIndex - delta;
      review.refresh(kataId, wasIndex, nowIndex);
    }
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const appendTrafficLights = (kataId, index, events) => {
    events.forEach(event => {
      if (cd.lib.isVisible(event)) {
        cd.lib.appendLightQualifierImg($trafficLights, event);
        appendTrafficLight(kataId, index, event);
      }
    });
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const appendTrafficLight = (kataId, index, light) => {
    const $light = $('<div>', { class: 'diff-traffic-light' });
    const $img = $('<img>', { src: `/images/traffic-light/${light.colour}.png` });
    $img.click(() => review.moveToTrafficLight(kataId, light.index));
    const avatarIndex = () => review.avatarIndex();
    const wasIndex = light.index - 1;
    const nowIndex = light.index;
    cd.setupTrafficLightTip($img, light.colour, avatarIndex, kataId, wasIndex, nowIndex);
    $light.append($img);
    $light.append(makeTrafficLightMarkerHtml(index, light));
    $trafficLights.append($light);
    return nowIndex;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const makeTrafficLightMarkerHtml = (index, light) => {
    const isCurrentIndex = (index === light.index);
    if (isCurrentIndex) {
      return `<img id='traffic-light-marker'
                   src='/images/traffic-light/marker_${light.colour}.png'/>`;
    } else {
      return '';
    }
  };

  // - - - - - - - - - - - - - - - - - - - - - - - -
  const scrollCurrentTrafficLightIntoView = () => {
    // refreshTrafficLights() has updated the dom with a $('#traffic-light-marker')
    // I cannot find a nice way to access it once the dom is ready. So this :-(
    const quarterSecond = 250;
    const scroller = () => {
      $('#traffic-light-marker').scrollIntoView({
        direction: 'horizontal',
         duration: 'slow'
      });
    };
    setTimeout(scroller, quarterSecond);
  };

});
</script>
