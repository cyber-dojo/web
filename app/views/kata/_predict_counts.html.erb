<div id="predict-counts" style="display:none;">
  <div id="tick-box">
    <img id="tick-img" src="/images/traffic-light/circle-tick.png">
    <div id="tick-count" class="traffic-light-count">0</div>
  </div>
  <div id="cross-box">
    <img id="cross-img" src="/images/traffic-light/circle-cross.png">
    <div id="cross-count" class="traffic-light-count">0</div>
  </div>
</div>

<script>
'use strict';
$(() => {

  const $counts = $('#predict-counts');
  cd.setTip($counts, () => cd.showHoverTip($counts, predictCountHoverTip()));

  cd.kata.predictCounts = {
    show: () => $counts.show('slide', {direction:'left'}, 500),
    hide: () => $counts.hide('slide', {direction:'left'}, 500)
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  cd.kata.updatePredictCounts = (light) => {
    if (cd.lib.isPredict(light)) {
      if (light.colour === light.predicted) {
        $('#tick-count').text(counts.tick += 1);
      } else {
        $('#cross-count').text(counts.cross += 1);
      }
    }
    if (light.revert) {
      counts.revert += 1;
    }
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  const counts = {
    tick: 0,
    cross: 0,
    revert: 0
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  const predictCountHoverTip = () => {
    let html = '';
    html += 'predictions';
    html += '<table id="predict-counts-hover-table">';
    html += predictTr('tick'  , 'correct'  );
    html += predictTr('cross' , 'incorrect');
    html += predictTr('revert', 'reverted' );
    return html;
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  const predictTr = (name, text) => {
    return '' +
      tr(td(`<img
              class="traffic-light-diff-tip-traffic-light-image"
              src="/images/traffic-light/circle-${name}.png">`) +
         td(`${counts[name]} ${text}`));
  };

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  const tr = (s) => `<tr>${s}</tr>`;
  const td = (s) => `<td>${s}</td>`;

});
</script>
