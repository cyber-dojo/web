<div id="predict-panel" style="display:none;">
  <button class="predict red">some tests will fail</button>
  <button class="predict amber">tests will not run</button>
  <button class="predict green">all tests will pass</button>
</div>

<script>
'use strict';
$(() => {

  const predicted = $('input[name=predicted]');

  const $panel = $('#predict-panel');

  cd.kata.predictPanel = {
    show: (f) => {
      //reduceFileKnaveMaxHeight($panel.height());
      $panel.slideDown('slow', f);
    },
    hide: (f) => {
      $panel.slideUp('slow', f);
      //reduceFileKnaveMaxHeight(0);
    }
  };

  const reduceFileKnaveMaxHeight = (delta) => {
    $('#kata-page #filename-list').css('max-height', `${500-delta}px`);
  };

  ['red','amber','green'].forEach((colour) => {
    $(`button.predict.${colour}`).click(() => {
      predicted.val(colour);
      const $oldLast = $lastTrafficLight();
      cd.testButton.predictClick(() => testRunComplete(colour, $oldLast));
    });
  });

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const testRunComplete = (predictedColour, $oldLast) => {
    const $newLast = $lastTrafficLight();
    const actualColour = $newLast.data('colour');
    const predictedWrong = (actualColour != predictedColour);
    const isLightToRevertTo = ($oldLast != undefined);
    if (autoRevertIsOn && predictedWrong && isLightToRevertTo) {
      const srcIndex = $oldLast.data('index');
      autoRevert({ src_id:cd.kata.id(), src_index:srcIndex });
    }
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const autoRevert = (args) => {
    // eg args = { src_id:'Xd4f2P', src_index:17 };
    args.id = cd.kata.id();
    args.index = cd.kata.index();
    $.post('/kata/revert', args, (data) => {
      cd.kata.editor.deleteFiles();
      for (const filename in data.files) {
        cd.kata.editor.createFile(filename, { content:data.files[filename] });
        cd.kata.editor.showFile(filename);
      }
      cd.kata.editor.output(data.stdout.content, data.stderr.content, data.status);
      cd.kata.tabs.output().click();
      cd.kata.filenames.refresh();
      cd.appendTrafficLight(data.light);
      cd.updateTrafficLightsCount();
      cd.kata.index(data.light.index);
      cd.scrollLastTrafficLightIntoView();
    }, 'json');
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -
  const $lastTrafficLight = () => {
    return $('#traffic-lights .diff-traffic-light').last();
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - -

  let autoRevertIsOn = false;

  // TODO: set the #kata-page #filename-list CSS max-height here ONLY (not in .scss file)
  // TODO: test button needs to be disabled on first display if predict is on
  // TODO: setup checkbox handlers

  if (cd.settings.predict() === 'on') {
    cd.kata.predictPanel.show();
  }

});
</script>
