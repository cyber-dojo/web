<input name="predicted" type="hidden" value="none">

<div id="predict-checkbox-container">
  <div id="predict-checkbox-title">predict</div>
  <input type="checkbox" id="predict-checkbox"/>
  <label for="predict-checkbox"></label>
</div>
<div id="revert-checkbox-container">
  <div id="revert-checkbox-title">+&nbsp;auto&nbsp;revert</div>
  <input type="checkbox" id="revert-checkbox"/>
  <label for="revert-checkbox"></label>
</div>

<div id="predict-buttons-container" style="display:none;">
  <button class="predict red"   type="button">some tests will fail</button>
  <button class="predict amber" type="button">tests will not run</button>
  <button class="predict green" type="button">all tests will pass</button>
</div>

<script>
'use strict';
$(() => {

  //- - - - - - - - - - - - - - - - - - - - - - -
  // Predict checkbox

  const $predictContainer = $('#predict-checkbox-container');
  const $predict = $('#predict-checkbox');

  cd.createTip($predictContainer, [
    'when predict is checked',
    'there are three test buttons:',
    '&nbsp;&bull; one to predict a <span class="red">red</span>',
    '&nbsp;&bull; one to predict an <span class="amber">amber</span>',
    '&nbsp;&bull; one to predict a <span class="green">green</span>'
  ].join('<br/>'));

  $('#predict-checkbox-title').click(() => {
    $predict.prop('checked', !$predict.is(':checked'));
    predictCheckBoxChanged();
  });

  $predict.prop('checked', cd.settings.predict() === 'on')
          .click(() => predictCheckBoxChanged());

  const predictCheckBoxChanged = () => {
    if ($predict.prop('checked')) {
      cd.settings.predict('on');
      predictOn();
    } else {
      cd.settings.predict('off');
      predictOff();
    }
  };

  const predictOn = () => {
    cd.kata.testButton.hide(() => {
      $buttonsContainer.slideDown('slow');
      cd.kata.predictCounts.show();
      cd.kata.showPredictImages();
      setFilenameListMaxHeight(470);
      cd.kata.editor.refocus();
    });
  };

  const predictOff = () => {
    $buttonsContainer.slideUp('slow', () => {
      cd.kata.testButton.show();
      cd.kata.predictCounts.hide();
      cd.kata.hidePredictImages();
      setFilenameListMaxHeight(530);
      cd.kata.editor.refocus();
    });
  };

  const setFilenameListMaxHeight = (value) => {
    $('#kata-page #filename-list').css('max-height', value);
  };

  //- - - - - - - - - - - - - - - - - - - - - - -
  // Predict buttons

  const $predicted = $('input[name=predicted]');

  cd.kata.predictedColour = () => $predicted.val();

  const $buttonsContainer = $('#predict-buttons-container');
  const $buttons = $('button.predict');

  ['red','amber','green'].forEach((rag) => {
    $(`button.predict.${rag}`).click(() => {
      $predicted.val(rag);
      disableButtons();
      cd.kata.runTests(() => {
        $predicted.val('none');
        enableButtons();
      });
    });
  });

  const disableButtons = () => $buttons.prop('disabled', true );
  const enableButtons  = () => $buttons.prop('disabled', false);

  //- - - - - - - - - - - - - - - - - - - - - - -
  // Revert checkbox
  // Note: if you turn predict off then on, the revert-container
  // gets slightly taller!! Perhaps it would be better to leave
  // the revert-container visible. If clicked it would auto-set
  // predict.

  const $revertContainer = $('#revert-checkbox-container');
  const $revert  = $('#revert-checkbox');

  cd.createTip($revertContainer, [
    'when auto revert is checked,',
    'an incorrect prediction will',
    'automatically revert to the',
    'previous traffic-light!'
  ].join('<br/>'));

  $('#revert-checkbox-title').click(() => {
    $revert.prop('checked', !$revert.is(':checked'));
    revertCheckBoxChanged();
  });

  $revert.prop('checked', cd.settings.revert() === 'on')
         .click(() => revertCheckBoxChanged());

  const revertCheckBoxChanged = () => {
    if ($revert.prop('checked')) {
      cd.settings.revert('on');
    } else {
      cd.settings.revert('off');
    }
    cd.kata.editor.refocus();
  };

  //- - - - - - - - - - - - - - - - - - - - - - -

  if (cd.settings.predict() === 'on') {
    predictOn();
  } else {
    predictOff();
  }

});
</script>
