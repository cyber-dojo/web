<input name="predicted" type="hidden" value="none">

<div id="predict-checkbox-container">
  <div id="predict-checkbox-title">predict</div>
  <input type="checkbox" id="predict-checkbox"/>
  <label for="predict-checkbox"></label>
</div>

<div id="revert-checkbox-title" style="display:none;">auto-revert if wrong!</div>

<div id="predict-buttons-container" style="display:none;">
  <table>
    <tr>
      <td><button class="predict red" data-colour="red" type="button">red</button></td>
      <td><div class="revert-checkbox-container">
            <input type="checkbox" class="revert-checkbox" data-colour="red"  />
          </div>
      </td>
    </tr>
    <tr>
      <td><button class="predict amber" data-colour="amber" type="button">amber</button></td>
      <td><div class="revert-checkbox-container">
          <input type="checkbox" class="revert-checkbox" data-colour="amber"/>
        </div>
      </td>
    </tr>
    <tr>
      <td><button class="predict green" data-colour="green" type="button">green</button></td>
      <td><div class="revert-checkbox-container">
          <input type="checkbox" class="revert-checkbox" data-colour="green"/>
        </div>
      </td>
    </tr>
  </table>
</div>

<script>
'use strict';
$(() => {

  //- - - - - - - - - - - - - - - - - - - - - - -
  // Predict checkbox

  const $predictCheckboxContainer = $('#predict-checkbox-container');
  const $predict = $('#predict-checkbox');

  cd.setTip($predictCheckboxContainer, () => {
    const tip = [
    'when checked, you predict the test result;',
    '&nbsp;&bull; <span class="red">red</span> - some tests will fail',
    '&nbsp;&bull; <span class="amber">amber</span> - tests will not run',
    '&nbsp;&bull; <span class="green">green</span> - all tests will pass'
    ].join('<br/>');
    if (cd.settings.predict() === 'off') {
      cd.showHoverTip($predictCheckboxContainer, tip);
    }
  });

  $('#predict-checkbox-title').click(() => {
    $predict.prop('checked', !$predict.is(':checked'));
    predictCheckBoxChanged();
  });

  $predict.prop('checked', cd.settings.predict() === 'on')
          .click(() => predictCheckBoxChanged());

  const predictCheckBoxChanged = () => {
    if ($predict.prop('checked')) {
      predictOn();
    } else {
      predictOff();
    }
  };

  // TODO: after showPredictImages() I need to scroll to the last traffic-light...
  const predictOn = () => {
    cd.settings.predict('on');
    cd.kata.testButton.hide(() => {
      $revertTitle.show('slow');
      $buttonsContainer.slideDown('slow');
      cd.kata.showPredictImages();
      cd.kata.showPredictCounts();
      setFilenameListMaxHeight(470);
      cd.kata.editor.refocus();
    });
  };

  const predictOff = () => {
    cd.settings.predict('off');
    $revertTitle.hide('slow');
    $buttonsContainer.slideUp('slow', () => {
      cd.kata.testButton.show();
      cd.kata.hidePredictImages();
      cd.kata.hidePredictCounts();
      setFilenameListMaxHeight(530);
      cd.kata.editor.refocus();
    });
  };

  const setFilenameListMaxHeight = (value) => {
    $('#kata-page #filename-list').css('max-height', value);
  };

  //- - - - - - - - - - - - - - - - - - - - - - -
  // Predict buttons

  const $predicted = $('input[name=predicted]');

  cd.kata.predictedColour = () => $predicted.val();

  const $buttonsContainer = $('#predict-buttons-container');
  const $buttons = $('button.predict');

  $('button.predict').click((event) => {
    $buttons.prop('disabled', true );
    const rag = $(event.target).data('colour');
    $predicted.val(rag);
    cd.kata.runTests(() => {
      $predicted.val('none');
      $buttons.prop('disabled', false);
    });
  });

  //- - - - - - - - - - - - - - - - - - - - - - -
  // Revert title and checkboxes

  const $revertTitle = $('#revert-checkbox-title');

  cd.createTip($revertTitle, [
    'when checked, if your prediction is',
    'wrong, your files will automatically',
    'lose all current edits!',
  ].join('<br/>'));

  $('.revert-checkbox').click((event) => {
    const $box = $(event.target);
    const colour = $box.data('colour');
    if ($box.is(':checked')) {
      cd.settings.revert(colour, 'on');
    } else {
      cd.settings.revert(colour, 'off');
    }
    cd.kata.editor.refocus();
  });

  //- - - - - - - - - - - - - - - - - - - - - - -

  if (cd.settings.predict() === 'on') {
    predictOn();
  } else {
    predictOff();
  }

});
</script>
