<div id="filename-list"></div>

<script>
'use strict';
$(() => {

  const filenames = cd.kata.filenames;
  const $filenames = $('#filename-list');

  filenames.sorted = () => {
    const all = cd.kata.editor.filenames();
    const listed = all.filter(filename => !cd.kata.tabs.reserves(filename));
    return cd.sortedFilenames(listed);
  }

  filenames.length = () => filenames.sorted().length;
  filenames.selected = () => $('.filename.selected', $filenames).text().trim();
  filenames.top = () => filenames.sorted()[0];
  filenames.refresh = () => rebuildFilenameList();

  //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // Filenames hot-key navigation
  //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  // See app/assets/javascripts/cyber-dojo_codemirror.js
  // See app/views/shared/_hotkeys.html.erb
  // Alt-J ==> selectNext()
  // Alt-K ==> selectPrevious()

  filenames.selectNext = () => {
    cd.kata.tabs.filename().click();
    filenames.select(nextFilename());
  };

  filenames.selectPrevious = () => {
    cd.kata.tabs.filename().click();
    filenames.select(previousFilename());
  };

  const indexOfSelected = () => filenames.sorted().indexOf(filenames.selected());
  const nextFilename = () => filenames.sorted()[indexOfNext()];
  const previousFilename = () => filenames.sorted()[indexOfPrevious()];

  const indexOfNext = () => {
    const index = indexOfSelected();
    if (index === -1) {
      return 0;
    } else {
      return (index + 1) % filenames.length();
    }
  };

  const indexOfPrevious = () => {
    const index = indexOfSelected();
    if (index === 0 || index === -1) {
      return filenames.length() - 1;
    } else {
      return index - 1;
    }
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  filenames.select = (filename) => {
    // Can't do $('radio_' + filename) because filename
    // could contain characters that aren't strictly legal
    // characters in a dom node id so I do this instead...
    const $filename = $(`[id="radio_${filename}"]`, $filenames);
    filenames.unselectAll();
    $filename.addClass('selected');
    cd.kata.tabs.setFilename(filename);
    const disabled = (filename === 'cyber-dojo.sh');
    cd.deleteFileButton().attr('disabled', disabled);
    cd.renameFileButton().attr('disabled', disabled);
  };

  filenames.unselectAll = () => {
    $('.filename', $filenames).removeClass('selected');
  };

  //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  const rebuildFilenameList = () => {
    const selected = filenames.selected(); // Try to keep selected
    const sorted = filenames.sorted();
    $filenames.empty();
    sorted.forEach(filename => $filenames.append(makeFilename(filename)));
    if (sorted.includes(selected)) {
      filenames.select(selected);
    } else {
      filenames.select(sorted[0]);
    }
  };

  const makeFilename = (filename) => {
    const $div = $('<div>', {
        class: 'filename',
           id: `radio_${filename}`,
         text: filename
    });
    if (cd.isHighlightFile(filename)) {
      $div.addClass('highlight');
    }
    if (cd.isSourceFile(filename) || filename === 'readme.txt') {
      $div.addClass('source');
    }
    $div.click(() => filenames.select(filename));
    return $div;
  };

});
</script>
