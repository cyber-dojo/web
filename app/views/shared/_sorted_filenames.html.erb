<script>
'use strict';
$(() => {

  cd.sortedFilenames = (filenames) => {
    // Controls how the filenames appear in filename lists
    // in kata/edit, review/show, and traffic-light hover-tip.
    const sliced = filenames.slice();
    sliced.sort(orderer);
    return sliced;
  };

  const orderer = (lhs, rhs) => {
    const lhsFileCat = fileCategory(lhs);
    const rhsFileCat = fileCategory(rhs);
    if (lhsFileCat < rhsFileCat)      { return -1; }
    else if (lhsFileCat > rhsFileCat) { return +1; }
    else if (lhs < rhs)               { return -1; }
    else if (lhs > rhs)               { return +1; }
    else                              { return  0; }
  };

  const fileCategory = (filename) => {
    if (filename.startsWith('readme'))     { return 0; } // Always at the top
    else if (cd.isHighlightFile(filename)) { return 1; }
    else if (cd.isSourceFile(filename))    { return 2; }
    else                                   { return 3; }
  };

  cd.isHighlightFile = (filename) => {
    return cd.highlightFilenames().includes(filename);
  };

  cd.isSourceFile = (filename) => {
    // Shell test frameworks (eg shunit2) use .sh extension
    // but cyber-dojo.sh does not count a user source file.
    return cd.extensionFilenames().find(ext => filename.endsWith(ext)) &&
      filename != 'cyber-dojo.sh';
  };

  cd.highlightFilenames = () => {
    const manifest = cd.kata.manifest();
    return manifest.highlight_filenames;
  };

  cd.extensionFilenames = () => {
    const manifest = cd.kata.manifest();
    return manifest.filename_extension;
  };

});
</script>
