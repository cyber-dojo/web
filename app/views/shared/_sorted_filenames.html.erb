<script>
'use strict';
$(() => {

  cd.sortedFilenames = (filenames) => {
    // Controls how the filenames appear in filename lists
    // in kata/edit, review/show, and traffic-light hover-tip.
    const sliced = filenames.slice();
    sliced.sort(orderer);
    return sliced;
  };

  const orderer = (lhs, rhs) => {
    const lhsFileCat = fileCategory(lhs);
    const rhsFileCat = fileCategory(rhs);
    if (lhsFileCat < rhsFileCat)      { return -1; }
    else if (lhsFileCat > rhsFileCat) { return +1; }
    else if (lhs < rhs)               { return -1; }
    else if (lhs > rhs)               { return +1; }
    else                              { return  0; }
  };

  const fileCategory = (filename) => {
    let category = undefined;
    if (isHighlight(filename))    { category = 1; }
    else if (isSource(filename))  { category = 2; }
    else                          { category = 3; }
    // Special cases
    if (filename === 'readme.txt')    { category = 0; } // [A]
    if (filename === 'cyber-dojo.sh') { category = 3; } // [B]
    return category;
    // [A] Always at the top
    // [B] Shell test frameworks (eg shunit2) use .sh extension
    //     but cyber-dojo.sh is not a user source file.
  };

  const isHighlight = (filename) => {
    return cd.highlightFilenames().includes(filename);
  };

  const isSource = (filename) => {
    return cd.extensionFilenames().find(ext => filename.endsWith(ext));
  };

  cd.highlightFilenames = () => {
    return $.parseJSON('<%= raw @highlight_filenames %>');
  };

  cd.extensionFilenames = () => {
    return $.parseJSON('<%= @filename_extension.inspect.html_safe %>');
  };

});
</script>
