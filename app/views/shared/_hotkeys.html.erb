<button type="button" id="hotkeys-button" class="info-button">hotkeys</button>

<script>
'use strict';
$(() => {

  const $button = $('#hotkeys-button');
  cd.createTip($button, 'show keyboard shortcuts');
  $button.click(() => openHotkeysInfoDialog());

  const openHotkeysInfoDialog = () => {
    let html = '';
    html += '<div id="hotkeys-dialog">';
    html += '<div class="info">Open a page of all <a href="https://defkey.com/codemirror-shortcuts" target="_blank">CodeMirror hotkeys</a>.</div>';
    html += '<table class="info" style="width:400px;">';
    html += tr3('start searching', 'Ctrl-F',       `${cmd}&thinsp;F`, );
    html += tr3('find next',       'Ctrl-G',       `${cmd}&thinsp;G`);
    html += tr3('find previous',   'Shift-Ctrl-G', `${cmd}${shift}&thinsp;G`);
    html += tr3('replace',         'Shift-Ctrl-F', `${cmd}${option}&thinsp;F`);
    html += tr3('replace all',     'Shift-Ctrl-R', `${cmd}${option}${shift}&thinsp;F`);
    html += '</table>';
    html += '<table class="info" style="width:400px;">';
    html += tr2('Alt-J', 'cycle&darr; through the filenames');
    html += tr2('Alt-K', 'cycle&uarr; through the filenames');
    html += tr2('Alt-O', 'toggle to/from the output tab');
    html += tr2('Alt-T', 'run the tests (predict off)');
    html += tr2('Alt-R', 'predict Red (predict on)');
    html += tr2('Alt-A', 'predict Amber (predict on)');
    html += tr2('Alt-G', 'predict Green (predict on)');
    html += '</table>';
    html += '</div>';

    const $div = $(html);
    $div.dialog({
              width: 435,
           autoOpen: true,
      closeOnEscape: true,
              modal: true,
              title: cd.dialogTitle('hotkeys'),
        beforeClose: () => cd.kata.editor.refocus(),
              close: () => $div.remove()
    });
  };

  const cmd    = "<span class='mac-cmd'></span>";
  const option = "<span class='mac-option'></span>";
  const shift  = "<span class='mac-shift'></span>";

  const tr2 = (key, what) => {
    return '<tr>' +
      `<td style="text-align:right;">${key}</td>` +
      '<td>&nbsp;:&nbsp;</td>' +
      `<td>${what}</td>` +
    '</tr>';
  };

  const tr3 = (key, notMac, mac) => {
    return '<tr>' +
      `<td style="text-align:right;">${key}</td>` +
      '<td>&nbsp;:&nbsp;</td>' +
      `<td>${notMac}</td>` +
      '<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>' +
      `<td>${mac}</td>` +
    '</tr>';
  };

});
</script>
